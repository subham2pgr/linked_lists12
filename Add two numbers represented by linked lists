#include <iostream>
using namespace std;
struct Node{
    int data;
    struct Node *next;
};
struct Node *newNode(int data){
    struct Node* new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data=data;
    new_node->next=NULL;
    return new_node;
}
void push(struct Node **head_ref,int data){
    struct Node* new_node=newNode(data);
    new_node->next=(*head_ref);
    (*head_ref) = new_node;
}
void printList(struct Node* node){
    while(node!=NULL){
        cout<<node->data;
        node=node->next;
    }
    cout<<"\n";
}
struct Node* addTwoLists(struct Node* first,struct Node* second){
    struct Node* res=NULL;
    struct Node* temp=NULL;
    struct Node* prev=NULL;
    int sum=0;
    int carry=0;
    while(first!=NULL || second!=NULL){
    sum=carry+(first?first->data:0)+(second?second->data:0);
    carry=(sum>=10)?1:0;
    sum=sum%10;
    temp=newNode(sum);
    if(res==NULL)
    {
        res=temp;
    }
    else{
        prev->next=temp;
    }
    prev=temp;
    if(first){
        first=first->next;
    }
    if(second){
        second=second->next;
    }
    }
    if(carry>0){
        temp->next=newNode(carry);
    }
    return res;
}
int main()
{
    
    struct Node* res = NULL;  
    struct Node* first = NULL;  
    struct Node* second = NULL;  
  
    // create first list 7->5->9->4->6  
    push(&first, 6);  
    push(&first, 4);  
    push(&first, 9);  
    push(&first, 5);  
    push(&first, 7);  
    printf("First List is ");  
    printList(first);  
  
    // create second list 8->4  
    push(&second, 4);  
    push(&second, 8);  
    cout<<"Second List is ";  
    printList(second);  
  
    // Add the two lists and see result  
    res = addTwoLists(first, second);  
    cout<<"Resultant list is ";  
    printList(res);  
  
return 0;  
}
