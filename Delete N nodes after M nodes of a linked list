#include <iostream>
using namespace std;
struct Node{
    int data;
    struct Node *next;
};
struct Node *newNode(int data){
    struct Node* new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data=data;
    new_node->next=NULL;
    return new_node;
}
void push(struct Node **head_ref,int data){
    struct Node* new_node=newNode(data);
    new_node->next=(*head_ref);
    (*head_ref) = new_node;
}
void printList(struct Node* node){
    while(node!=NULL){
        cout<<node->data<<" ";
        node=node->next;
    }
}
void skipMdeleteN(struct Node* head,int M,int N){
    struct Node *curr=head;
    struct Node *t;
    int count;
    while(curr!=NULL){
        for(count=1;count<M&&curr!=NULL;count++){
            curr=curr->next;
        }
        t=curr->next;
        for(count=1;count<=N&&t!=NULL;count++){
            struct Node *temp=t;
            t=t->next;
            free(temp);
        }
        curr->next=t;
        curr=t;
    }
}
int main()  
{  
    /* Create following linked list  
    1->2->3->4->5->6->7->8->9->10 */
    struct Node* head = NULL;  
    int M=2, N=3;  
    push(&head, 10);  
    push(&head, 9);  
    push(&head, 8);  
    push(&head, 7);  
    push(&head, 6);  
    push(&head, 5);  
    push(&head, 4);  
    push(&head, 3);  
    push(&head, 2);  
    push(&head, 1);  
  
    cout << "M = " << M<< " N = " << N << "\nGiven Linked list is :\n";  
    printList(head);  
  
    skipMdeleteN(head, M, N);  
  
    cout<<"\nLinked list after deletion is :\n";  
    printList(head);  
  
    return 0;  
} 
