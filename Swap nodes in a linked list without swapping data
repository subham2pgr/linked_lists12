#include <iostream>
using namespace std; 
  
/* A linked list node */
class Node  
{  
    public: 
    int data;  
    Node *next;  
};  
void swapNodes(struct Node** head_ref,int x,int y){
    if(x==y){
        return;
    }
    Node *prevX=NULL;
    Node *currX=*head_ref;
    while(currX!=NULL&&currX->data!=x){
        prevX=currX;
        currx=currX->next;
        
    }
    Node *prevY=NULL;
    Node *currY=*head_ref;
    while(currY!=NULL&&currY->data!=y){
        prevY=currY;
        currY=currY->next;
        
    }
    if(currX==NULL||currY==NULL){
        return;
    }
    if(prevX!=NULL){
        prevX->next=currY;
    }
    else{
        *head_ref=currY;
    }
    if(prevY!=NULL){
        prevY->next=currX;
    }
    else{
        *head_ref=currY;
    }
    struct Node* temp=currY->next;
    currY>next = currX->next;
    currX->next = temp;
}
  
  
  
void printList(Node *node)  
{  
    while(node != NULL)  
    {  
        cout<<node->data<<" ";  
        node = node->next;  
    }  
}  
  
/* Driver program to test above function */
int main()  
{  
    Node *start = NULL;  
  
    /* The constructed linked list is:  
    1->2->3->4->5->6->7 */
    push(&start, 7);  
    push(&start, 6);  
    push(&start, 5);  
    push(&start, 4);  
    push(&start, 3);  
    push(&start, 2);  
    push(&start, 1);  
  
    cout << "Linked list before calling swapNodes() ";  
    printList(start);  
  
    swapNodes(&start, 4, 3);  
  
    cout << "\nLinked list after calling swapNodes() ";  
    printList(start);  
  
    return 0;  
}  
