#include <iostream>
using namespace std;
struct Node{
    int data;
    struct Node *next;
};
struct Node *newNode(int data){
    struct Node* new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data=data;
    new_node->next=NULL;
    return new_node;
}
void push(struct Node **head_ref,int data){
    struct Node* new_node=newNode(data);
    new_node->next=(*head_ref);
    (*head_ref) = new_node;
}
void printList(struct Node* node){
    while(node!=NULL){
        cout<<node->data;
        node=node->next;
        cout<<"\n";
    }
}
void deleteAlt(struct Node* head){
    if(head==NULL){
        return;
    }
    struct Node* prev=head;
    struct Node* node=head->next;
    while(prev!=NULL&&node!=NULL){
        
        prev->next=node->next;
        free(node);
        prev=prev->next;
        if(prev!=NULL){
            node=prev->next;
        }
    }
}
int main()
{
    
    struct Node* head = NULL;  
    push(&head, 5);  
    push(&head, 4);  
    push(&head, 3);  
    push(&head, 2);  
    push(&head, 1);  
  
    cout<<"List before calling deleteAlt() \n";  
    printList(head);  
  
    deleteAlt(head);  
  
    cout<<"\nList after calling deleteAlt() \n";  
    printList(head);  
  
return 0;  
}
